---
resource_types:
- name: registry-image
  type: docker-image
  source:
    repository: concourse/registry-image-resource
- name: gci
  type: registry-image
  source:
    registry_mirror:
      host: mirror.gcr.io
    repository: smgoller/gci-resource

resources:
- name: google-cloud-sdk-image
  type: registry-image
  source:
    registry_mirror:
      host: mirror.gcr.io
    repository: google/cloud-sdk
    tag: alpine

- name: linux-base-family
  type: gci
  check_every: 24h
  source:
    key: ((concourse-gcp-key))
    family_project: ubuntu-os-cloud
    family: ((linux-base-family))

- name: google-sdg-builder
  type: git
  source:
    branch: main
    uri: git@github.com:{{ repositories.springDataGemfire.fork }}/{{ repositories.springDataGemfire.repo }}.git
    private_key: ((gemfire-ci-private-key))
    paths:
    - ci/scripts/build_image.sh
    - ci/images/google-sdg-builder

- name: hashicorp-packer-image
  type: registry-image
  source:
    registry_mirror:
      host: mirror.gcr.io
    repository: hashicorp/packer
    tag: 1.4.5

- name: oci-build-task-image
  type: registry-image
  source:
    registry_mirror:
      host: mirror.gcr.io
    repository: concourse/oci-build-task

- name: utilities-alpine-tools-dockerfile
  icon: github
  type: git
  source:
    depth: 1
    branch: {{ repositories.springDataGemfire.branch }}
    uri: git@github.com:{{ repositories.springDataGemfire.fork }}/{{ repositories.springDataGemfire.repo }}.git
    private_key: ((gemfire-ci-private-key))
    paths:
    - ci/images/utilities-alpine-tools

- name: utilities-alpine-tools-docker-image
  icon: docker
  type: registry-image
  source:
    username: "_json_key"
    password: ((concourse-gcp-key))
    repository: gcr.io/((gcp-project))/((pipeline-prefix))utilities-alpine-tools
    tag: latest
jobs:
# alpine-tools
- name: build-utiltiies-alpine-tools-docker-image
  plan:
  # fetch repository source (containing Dockerfile)
  - in_parallel:
    - get: utilities-alpine-tools-dockerfile
      trigger: true
    - get: google-cloud-sdk-image
      trigger: true
    - get: hashicorp-packer-image
      trigger: true
    - get: oci-build-task-image
  # build using `oci-build` task
  #
  # note: this task config could be pushed into `my-image-src` and loaded using
  # `file:` instead
  - task: build
    image: oci-build-task-image
    privileged: true
    config:
      platform: linux
      params:
        CONTEXT: utilities-alpine-tools-dockerfile/ci/images/utilities-alpine-tools
      inputs:
      - name: utilities-alpine-tools-dockerfile
      outputs:
      - name: image
      caches:
      - path: cache
      run:
        path: build
  # push using `registry-image` resource
  - put: utilities-alpine-tools-docker-image
    params: {image: image/image.tar}

- name: build-google-sdg-builder
  serial: true
  plan:
  - in_parallel:
    - get: google-sdg-builder
      trigger: true
    - get: utilities-alpine-tools-docker-image
      passed: [build-utiltiies-alpine-tools-docker-image]
    - get: linux-base-family
      trigger: true
  - task: build-image
    timeout: 1h
    image: utilities-alpine-tools-docker-image
    config:
      inputs:
      - name: google-sdg-builder
      - name: linux-base-family
        path: base-family
      outputs:
      - name: results
      platform: linux
      params:
        PIPELINE_PREFIX: ((pipeline-prefix))
        GCP_PROJECT: ((gcp-project))
        GCP_NETWORK: ((gcp-network))
        GCP_SUBNETWORK: ((gcp-subnet))
        INTERNAL: "true"
        CONCOURSE_GCP_KEY: "((concourse-gcp-key))"
        JAVA_BUILD_VERSION: 17
      run:
        path: google-sdg-builder/ci/scripts/build_image.sh
        args:
        - google-sdg-builder/ci/images/google-sdg-builder/packer.json
