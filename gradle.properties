# Version information for use by Maven artifacts
#
# The versionNumber follows semantic versioning conventions.
#   X.Y.Z     - major.minor.patch
# The releaseQualifier uses the following conventions:
#   .M?       - milestone release
#   -beta.?   - beta release
#   -build.?    - development version
#   <blank>   - release
#
# The full version string consists of 'versionNumber + releaseQualifier + releaseType'
version = 9.10-build.0

# Maven also uses the project group as a prefix.
group = com.vmware.tanzu.gemfire

# 'apply from:' location for gradle scripts, relative to the project root.  Specified here so that
# it may be overridden by external projects or custom develop environment configurations
scriptDir = gradle

# Set the buildId to add build metadata that can be viewed from
# gfsh or pulse (`gfsh version --full`). Can be set using
# `gradle -PbuildId=N ...` where N is an arbitrary string.buildId = 0
buildId = 0

productName = Spring Data For Tanzu Geode
productOrg = VMware

minimumGradleVersion = 7.4.1
# Set this on the command line with -P or in ~/.gradle/gradle.properties
# to change the buildDir location.  Use an absolute path.
buildRoot=

#JAVA_HOME to be used for compilation
compileJVM=
compileJVMVer=8

#JAVA_HOME to be used by tests
testJVM=
testJVMVer=8

repeat = 100

org.gradle.caching = true
org.gradle.configureondemand = false
org.gradle.daemon = true
org.gradle.jvmargs = -Xmx3g
org.gradle.parallel = true
#org.gradle.workers.max = 3

org.gradle.internal.http.socketTimeout=120000
org.gradle.internal.http.connectionTimeout=120000

junit.jupiter.testclass.order.default = org.junit.jupiter.api.ClassOrderer$Random

springDataVersion = 2.5.10
springDataBranch = 2.5.x
gemfireVersion = 9.10.5
